//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: rgn.bt
//   Authors: exec, Yiting
//   Version: 1
//   Purpose: Mabinogi's .rgn file format.
//  Category: 
// File Mask: *.rgn
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "inc/common.bt";

int version;
int length;
int regionId;
int groupId;
WString regionName;
int cellSize;
byte sight;
int areaCount;
int unk1;
Vector3F_XZY bottomLeft;
Vector3F_XZY bottomRight;
Vector3F_XZY topRight;
Vector3F_XZY topLeft;

if (version > 100)
{
    int regionType;
    int indoorType;
    float unk2;
}
else
{
    // Different from regionType in that it
    // combines region and indoorType.
    int legacyRegionType;

    // Found in CN11
    if (legacyRegionType == 100)
    {
        int unk32;
        float unk33;
    }
}

WString scene;
Color unk3;
Color unk4;
Vector3F_XZY lightDirection;
Color globalOverrideColor;
Color unk5;
byte applyGlowOverlay;
Color unk6;
Vector3F_XZY globalOverlayPosition;
WString cameraName;
WString lightName;
float cameraRadius;
float unk7;
float referenceRadius;
WString areaFileNames[areaCount];

if (version >= 103)
    wstring unk28;

if (version > 100)
{
    byte unk8;
    float unk9;
    float unk10;
    int unk11;
    byte unk12;
    byte unk13;
    float unk14;
    float unk31;
    LpWString xml;
}

int unk29;
if (version == 100)
{
    // I don't remember where I got this from,
    // but KR72's v100 regions don't have it.
    //byte unk32;
    //float unk10;
    //WString distantmesh;
    //int unk33;
}
WString path;
short unk16;
float unk17;
float unk18;
float unk19;
float unk20;
float unk21;
float unk22;
float unk23;
float unk24;
float unk25;
float unk26;

// Sometimes a few bytes follow Unk26, but it seems random.
// The data in those bytes also appears to be random,
// usually it's 4 zero bytes, but there's also a case
// where a full copy of the previous unknown floats can
// be found here, "ula_emainmacha_oidtobar_hall".
// 
// Ula_Emainmacha_OidTobar_Hall: 48 byte
// JP_Nekojima_islet: 12 byte
// Others: 4 byte

local int64 rest = (FileSize() - FTell());
if (rest > 0)
    byte unk27[rest];
