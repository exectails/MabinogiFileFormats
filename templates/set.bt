//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: set.bt
//   Authors: exec, Tachiorz
//   Version: 1
//   Purpose: 
//  Category: 
// File Mask: *.set
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "inc/common.bt"
#include "inc/frm.bt"
#include "inc/ani.bt"

typedef struct
{
    int type; // 1000 = pf, 1001 = pa, ?
    int size;
    wstring fileName;
    wstring stateName;

    if (type == 1000)
    {
        Frm frm;
    }
    else if (type == 1001)
    {
        Ani ani;
    }
    else
    {
        byte unk3[size];
    }
}
SetItem <optimize=false, read=readSetItem>;

string readSetItem(SetItem& v)
{
    local string type;
    if (v.type == 1000)
        SPrintf(type, "%s", "pf!");
    else if (v.type == 1001)
        SPrintf(type, "%s", "pa!");
    else
        SPrintf(type, "%d", v.type);

    local string result;
    SPrintf(result, "%s :: %s :: %s", v.fileName, v.stateName, type);
    return result;
}

typedef struct
{
    int size;
    char meshName[128];
    char colorName[32];
    char jointName[32];
    byte unk1[12];
}
MeshInfo <optimize=false>;

typedef struct
{
    int i7;
    int size;

    // This seems to be bounding box info,
    // which the shapes can be derived from.
    Vector3F_XYZ unk30;
    Vector3F_XYZ unk31;
    Vector3F_XYZ unk32;
    Vector3F_XYZ unk33;
    Vector3F_XYZ unk34;

    byte unk4[3];
}
BoundsInfo <optimize=false>;

typedef struct
{
    int i2;
    wstring state;
    short meshCount;
    MeshInfo meshInfo[meshCount];
}
MeshInfoCollection <optimize=false>;

typedef struct
{
    int i3;
    wstring state;

    int boundsCount;
    if (boundsCount > 0)
        BoundsInfo boundsInfo[boundsCount];
}
BoundsInfoCollection <optimize=false>;

typedef struct
{
    char signature[4];
    FormatVersion version;

    int size; // minus signature, version and size
    byte b1;

    int meshInfoCount;
    if (meshInfoCount > 0)
        MeshInfoCollection meshInfo[meshInfoCount];
    
    int boundsInfoCount;
    if (boundsInfoCount > 0)
        BoundsInfoCollection boundsInfo[boundsInfoCount];

    int i1; // a count for the data below?
    if (i1 != 0)
    {
        // example: tb_tirchonaill_farm01.set
        //wstring state;
        //int i11;
        //int i12;
        //int i13;
        //Vector3F_XYZ vec1[1309];

        byte bin1[size - FTell() - sizeof(int) * 2];
    }

    int i2;
    int i3;

    int itemCount;
}
Header;

typedef struct
{
    Header header;
    if (header.itemCount > 0)
        SetItem items[header.itemCount];
}
Set;

Set set;

if (!FEof())
    Printf("WARNING: Leftovers");
